;1. Computational Theory;2. Software Engineering Principles;3. Program Design Patterns;4. Digital Logic & Circuitry;5. Artificial Intelligence;6. Machine Learning;7. Human-Computer Interaction (HCI);8. Cybersecurity & Cryptography;9. Research Methodologies für CS;10. Ethics in Technology;11. Professional Development;12. Student Resources;13. CS Theory Concepts;14. Programming Languages Practices
0;"  ""Computational Theory: computational complexity"; Software Engineering Principles: agile methodologies; Program Design Patterns:Model-View-Controller; Digital Logic & Circuitry: binary arithmetic; Artificial Intelligence: machine reasoning; Machine Learning: neural networks; Human-Computer Interaction (HCI): user-centered design; Cybersecurity & Cryptography: encryption algorithms; Research Methodologies für CS: experimental design; Ethics in Technology: data privacy; Professional Development: continuing education; Student Resources: tutoring services; CS Theory Concepts: Turing machines;" Programming Languages Practices: object-oriented programming."""
1;" ""Computational Theory: decidability"; Software Engineering Principles: code reusability; Program Design Patterns: Observer pattern; Digital Logic & Circuitry: logic gates; Artificial Intelligence: natural language processing; Machine Learning: support vector machines; Human-Computer Interaction (HCI): accessibility; Cybersecurity & Cryptography: secure communication; Research Methodologies für CS: statistical analysis; Ethics in Technology: digital divide; Professional Development: leadership skills; Student Resources: scholarship opportunities; CS Theory Concepts: automata theory;" Programming Languages Practices: functional programming."""
2;" ""Computational Theory: computational models"; Software Engineering Principles: software testing; Program Design Patterns: Singleton pattern; Digital Logic & Circuitry: flip-flops; Artificial Intelligence: expert systems; Machine Learning: unsupervised learning; Human-Computer Interaction (HCI): user experience; Cybersecurity & Cryptography: authentication; Research Methodologies für CS: case studies; Ethics in Technology: algorithmic bias; Professional Development: networking; Student Resources: study groups; CS Theory Concepts: complexity classes;" Programming Languages Practices: memory management."""
3;" ""Computational Theory: λ-calculus"; Software Engineering Principles: project management; Program Design Patterns: Adapter pattern; Digital Logic & Circuitry: combinational logic; Artificial Intelligence: computer vision; Machine Learning: deep learning; Human-Computer Interaction (HCI): usability; Cybersecurity & Cryptography: network security; Research Methodologies für CS: simulations; Ethics in Technology: intellectual property; Professional Development: public speaking; Student Resources: mentorship programs; CS Theory Concepts: graph theory;" Programming Languages Practices: concurrency."""
4;" ""Computational Theory: formal semantics"; Software Engineering Principles: software maintenance; Program Design Patterns: Facade pattern; Digital Logic & Circuitry: sequential logic; Artificial Intelligence: machine translation; Machine Learning: reinforcement learning; Human-Computer Interaction (HCI): activity theory; Cybersecurity & Cryptography: cryptanalysis; Research Methodologies für CS: surveys; Ethics in Technology: transparency; Professional Development: project management; Student Resources: online courses; CS Theory Concepts: type theory;" Programming Languages Practices: exception handling."""
5;" ""Computational Theory: recursion theory"; Software Engineering Principles: software documentation; Program Design Patterns: Template method pattern; Digital Logic & Circuitry: multiplexers; Artificial Intelligence: robotics; Machine Learning: feature selection; Human-Computer Interaction (HCI): participatory design; Cybersecurity & Cryptography: secure coding; Research Methodologies für CS: action research; Ethics in Technology: social impact; Professional Development: personal branding; Student Resources: career services; CS Theory Concepts: category theory;" Programming Languages Practices: recursion."""
6;" ""Computational Theory: Kolmogorov complexity"; Software Engineering Principles: software configuration; Program Design Patterns: Strategy pattern; Digital Logic & Circuitry: registers; Artificial Intelligence: automated planning; Machine Learning: ensemble methods; Human-Computer Interaction (HCI): affective computing; Cybersecurity & Cryptography: digital signatures; Research Methodologies für CS: experiments; Ethics in Technology: environmental sustainability; Professional Development: entrepreneurship; Student Resources: internships; CS Theory Concepts: computational geometry;" Programming Languages Practices: garbage collection."""
7;" ""Computational Theory: Church-Turing thesis"; Software Engineering Principles: software reliability; Program Design Patterns: Command pattern; Digital Logic & Circuitry: adders; Artificial Intelligence: cognitive computing; Machine Learning: clustering; Human-Computer Interaction (HCI): cooperative learning; Cybersecurity & Cryptography: ethical hacking; Research Methodologies für CS: grounded theory; Ethics in Technology: free speech; Professional Development: time management; Student Resources: counseling services; CS Theory Concepts: cellular automata;" Programming Languages Practices: interoperability."""
8;" ""Computational Theory: Gödel's incompleteness theorems"; Software Engineering Principles: software metrics; Program Design Patterns: Composite pattern; Digital Logic & Circuitry: decoders; Artificial Intelligence: reasoning under uncertainty; Machine Learning: dimensionality reduction; Human-Computer Interaction (HCI): cross-cultural design; Cybersecurity & Cryptography: biometric authentication; Research Methodologies für CS: content analysis; Ethics in Technology: accountability; Professional Development: emotional intelligence; Student Resources: library resources; CS Theory Concepts: computational learning theory;" Programming Languages Practices: aspect-oriented programming."""
9;" ""Computational Theory: Rice's theorem"; Software Engineering Principles: software verification; Program Design Patterns: Iterator pattern; Digital Logic & Circuitry: counters; Artificial Intelligence: natural language generation; Machine Learning: online learning; Human-Computer Interaction (HCI): social computing; Cybersecurity & Cryptography: secure multiparty computation; Research Methodologies für CS: meta-analysis; Ethics in Technology: information privacy; Professional Development: salary negotiation; Student Resources: financial aid resources; CS Theory Concepts: lattice theory;" Programming Languages Practices: design patterns.""</s>"
