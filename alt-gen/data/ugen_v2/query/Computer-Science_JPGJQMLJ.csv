;Programming Language; Data Structures; Algorithms; Complexity Analysis; Operating System; Memory Management; Networking; File Handling; Database; Math for CS
0; Java; Arrays, Linked Lists, Trees, Graphs; Searching, Sorting, Graph Traversal; Big O Notation; Linux; Virtual Memory, Page Replacement; TCP/IP; Reading/Writing Files; SQL, NoSQL; Probability, Combinatorics
1;Python; Tuples, Sets, Dictionaries; Hashing, Recursion, Dynamic Programming; Asymptotic Analysis; MacOS; Swapping, Segmentation; HTTP, FTP; Serializing/Deserializing; Relational, Document-based; Linear Algebra, Calculus
2;C++; Vectors, Stacks, Queues; Divide and Conquer, Greedy, Backtracking; Space-Time Tradeoff; Windows; Paging, Segmentation; DNS, SMTP; Binary I/O; Object-relational, Graph; Geometry, Trigonometry
3;Ruby; Hashes, Ranges, Strings; Memoization, Breadth-first Search, Depth-first Search; Computational Complexity; BSD; Spooling, Caching; BitTorrent, IMAP; Marshaling/Unmarshaling; Time-series, Key-value; Number Theory, Abstract Algebra
4;Swift; Optionals, Closures, Tuples; Bubble Sort, Quick Sort, Merge Sort; Master Theorem; iOS; Disk Scheduling, Memory Allocation; Bonjour, ICMP; Core Data, SQLite; Vector Calculus, Optimization;
5;Go; Slices, Maps, Structs; Dijkstra's, Bellman-Ford, Floyd-Warshall; Amortized Analysis; Plan 9; Deadlock, Starvation; SSH, SCP; JSON, XML; Redis, MongoDB; Discrete Mathematics, Set Theory
6;Javascript; Objects, Arrays, Functions; Priority Queues, Heaps, Deques; Recurrence Relations; Node.js; Swap Files, Page Swapping; Fetch API, XHR; Pickling, Unpickling; Mongoose, Sequelize; Combinations, Permutations
7;C#; Delegates, Events, Generics; Kruskal's, Prim's, Depth-first Search; Landau Notation; .NET; File System, Memory Mapped Files; SMTP, IMAP; XML, SOAP; Entity Framework, Dapper; Applied Mathematics, Cryptography
8;Rust; Ownership, Lifetimes, Iterators; Topological Sort, Longest Common Subsequence, Longest Increasing Subsequence; Logarithmic Complexity; Redox; Context Switching, Preemption; HTTP, SNMP; TOML, JSON; Diesel, SQLx; Information Theory, Coding Theory
9;Scala; Traits, Case Classes, Higher-order Functions; Branch and Bound, A\* Search, Monte Carlo Tree Search; Lambda Calculus; Akka; Garbage Collection, Virtual Memory; Avro, Protobuf; Play, Slick; Category Theory, Type Theory</s>;
10; Java; Interfaces, Enums, Generics; Dijkstra's, Bellman-Ford, Floyd-Warshall; Big O Notation; Linux; Virtual Memory, Page Replacement; TCP/IP, UDP; Properties, Serialization; Hibernate, MyBatis; Statistics, Combinatorics  Discrete Mathematics
11;Go; Structs, Interfaces, Goroutines; Delaunay Triangulation, Convex Hull, Line Intersection; Amortized Analysis; Fuchsia; Process Isolation, Isolated Heap; SOCKS, RPC; YAML, MessagePack; Gin, GORM; Graph Theory, Computational Geometry
12;Python; Decorators, Context Managers, Generators; Dynamic Programming, Greedy Algorithms, Backtracking; Time Complexity; BSD; Swap Space, Copy-on-Write; FTP, SFTP; Pickle, JSON; Flask, Django; Set Theory, Graph Theory
13;Javascript; Closures, Promises, Async/Await; Breadth-first Search, Depth-first Search, Dijkstra's; Space Complexity; Plan 9; Load Average, CPU Time Slices; WebSockets, WebRTC; NDJSON, CBOR; Express, Sequelize; Computational Complexity, Combinatorics
14;Kotlin; Extensions, Delegated Properties, Lambda Expressions; Binary Heap, Fibonacci Heap, Hopcroft-Karp Algorithm; Little O Notation; Android; Dalvik,ART; ICMP, IGMP; XML, Parcelable; Ktor, Room; Logic Programming, Computational Geometry
15;Swift; Optionals, Closures, Tuples; Knapsack Problem, Longest Path Problem, Network Flow; Master Theorem; macOS; Swap Files, Memory Compression; SMTP, IMAP, POP; Plist, JSON; Vapor, CoreData; Number Theory, Cryptography
16;Haskell; Typeclasses, Monads, Functors; Hamilton Cycle, Chinese Postman Problem, Minimum Spanning Tree; Akra-Bazzi Method; NixOS; Substitution, Garbage Collection; HTTP, WebSocket; TOML, JSON; Yesod, Persistent; Category Theory, Lambda Calculus
17;C++ ; Templates, Rvalue References, Lambdas; Travelling Salesman Problem, Linear Programming, Network Simplex; Empirical Analysis; Windows 10; Memory Pages, Memory-mapped I/O; Protocol Buffers, COM; Winsock, Boost.Asio; Graph Theory, Coding Theory;
18;Ruby; Modules, Procs, Blocks; Graph Coloring, Set Cover, Minimum Vertex Cover; Bachmann-Landau Notation; Red Hat Enterprise Linux; Memory Allocation, Page Faults; FTP, SSH; YAML Ain't Markup Language, MessagePack; Rack, ActiveRecord; Information Theory, Probability Theory
19;Erlang; Pattern Matching, Processes, Higher-order Functions; Fleury's Algorithm, Reversing Graphs, Articulation Points; Soft Real-Time Constraints; GenServer, ETS; DNS, SIP; Mnesia, Ecto; Concurrency Theory, Set Theory</s>;;
20; Go; Interfaces, Structs, Goroutines; Dijkstra's Algorithm, Bellman-Ford Algorithm; Go's Garbage Collector; Stack, Heap; TCP, UDP; JSON, XML; PostgreSQL, MySQL; Combinatorics, Calculus;
21;Java; Interfaces, Enums, Generics; Depth-First Search, Breadth-First Search; Java Virtual Machine; Stack, Queue; HTTP, SMTP; XML, JSON; MongoDB, Oracle; Discrete Mathematics, Linear Algebra;
22;Python; Decorators, Generators, List Comprehensions; Dynamic Programming, Greedy Algorithms; Reference Counting; Stack, Deque; ICMP, IGMP; Pickle, JSON; SQLite, SQLAlchemy; Graph Theory, Number Theory;
23;Scala; Traits, Case Classes, Higher-order Functions; Knapsack Problem, Shortest Path Faster Algorithm; Generational Garbage Collection; Process, Thread; AMQP, JMS; Slick, Cassandra; Probability, Abstract Algebra;;
24;Julia; Multiple Dispatch, Macros, Type System; Quicksort, Mergesort; Automatic Garbage Collection; Call Stack, Task Local Storage; DHCP, SNMP; JSON, MsgPack; DataFrames, SQLite; Probability, Topology;
25;Haskell; Typeclasses, Laziness, Monads; Longest Common Subsequence, Longest Increasing Subsequence; Haskell Runtime System; Continuation, Razor; SSH, IMAP; Aeson, CSV; Vector, Text; Lattices, Topology;
26;C#; Delegates, Events, Lambda Expressions; Prim's Minimum Spanning Tree, Floyd-Warshall Algorithm; .NET Memory Management; Managed Heap, Large Object Heap; SMB, RDP; XML Serialization, Newtonsoft; LINQ, Set Theory;;
27;Rust; Lifetimes, Traits, Zero-cost Abstractions; Bellman-Ford Algorithm, Pagerank; Ownership, Borrowing, Lifetimes; Stack, Heap; TCP, UDP; TOML, JSON; Diesel, SQLite; Combinatorics, Geometry;
28;Swift; Protocols, Extensions, Closures; Kruskal's Algorithm, Dinic's Algorithm; Swift Reference Counting; Stack, Queue; HTTP, HTTPS; Property Lists, JSON; Realm, PostgreSQL; Discrete Mathematics, Analysis;
29;Fortran; Modules, Procedures, Recursion; Biconnected Components, Cut Vertices; Fortran Memory Management; Stack, Queue; FTP, SFTP; HDF5, NetCDF; P netCDF, HDF5; Numerical Analysis, Computational Geometry</s>;
30; Go; Goroutines, Channels, Select; Depth-first Search, Breadth-first Search; Garbage Collection; Mutex, WaitGroup; TCP, UDP; JSON, Protocol Buffers; PostgreSQL, MySQL; Combinatorics, Probability;
31;Scala; Traits, Case Classes, Higher-Order Functions; Min-max Algorithm, A* Search; Scala Memory Management; Stack, Queue; HTTP, Websocket; XML, JSON; MongoDB, Cassandra; Linear Algebra, Discrete Mathematics;
32;Haskell; Typeclasses, Monads, Lazy Evaluation; Dijkstra's Algorithm, Bellman-Ford Algorithm; Haskell Memory Management; Software Transactional Memory; TCP, UDP; YAML, JSON; PostgreSQL, Redis; Category Theory, Graph Theory;
33;Erlang; Processes, Messages, Selective Receive; Depth-first Search, Breadth-first Search; Erlang Memory Management; Garbage Collection; TCP, UDP; JSON, MessagePack; Mnesia, CouchDB; Combinatorics, Probability;
34;Kotlin; Extensions, Higher-Order Functions, Lambda Expressions; Topological Sort, Kosaraju's Algorithm; Kotlin Memory Management; Stack, Queue; HTTP, WebSockets; XML, JSON; MongoDB, Cassandra; Set Theory, Number Theory;
35;Perl; Packages, Modules, References; Longest Common Subsequence, Needleman-Wunsch Algorithm; Perl Memory Management; Stack, Heap; TCP, UDP; JSON, YAML; DBI, SQLite; Combinatorics, Graph Theory;
36;Julia; Multiple Dispatch, Types, Macros; Strassen's Algorithm, Coppersmith-Winograd Algorithm; Julia Memory Management; Garbage Collection; Mutex, Semaphore; TCP, UDP; JSON, Protocol Buffers; MongoDB, SQLite; Linear Algebra, Differential Equations
37;Lua; Modules, Coroutines, Metatables; Floyd-Warshall Algorithm, Dijkstra's Algorithm; Lua Memory Management; Stack, Register; TCP, UDP; JSON, MessagePack; LuaSQL, SQLite; Combinatorics, Graph Theory;
38;Groovy; Closures, Expandos, Categories; Huffman Coding Algorithm, Run-Length Encoding; Groovy Memory Management; Stack, Queue; HTTP, Websocket; XML, JSON; MongoDB, Cassandra; Propositional Logic, Predicate Logic;
39;Dart; Isolates, Channels, Futures; Floyd-Warshall Algorithm, Dijkstra's Algorithm; Dart Memory Management; Stack, Heap; TCP, UDP; JSON, Protocol Buffers; MongoDB, SQLite; Probability, Combinatorics</s>;
40; Rust; Enum, Struct, Traits; Knapsack Problem, Shortest Path; Rust Memory Management; Stack, Heap; TCP, UDP; serde, Bincode; PostgreSQL, SQLite; Computational Geometry, Number Theory;
41;Swift; Closures, Protocols, Extensions; Minimum Spanning Tree, Bellman-Ford Algorithm; Swift Memory Management; Stack, Queue; HTTP, Websocket; XML, Plist; Realm, Firebase; Graph Theory, Topology;
42;Go; Structs, Interfaces, Goroutines; Travelling Salesman Problem, Longest Common Subsequence; Go Memory Management; Stack, Heap; TCP, UDP; Protobuf, JSON; MongoDB, BoltDB; Abstract Algebra, Number Theory;
43;Haskell; Typeclasses, Monads, Lists; Optimal Binary Search Tree, Optimal Merge Pattern; Haskell Memory Management; Stack, Lazy Evaluation; TCP, UDP; Aeson, Binary; Redis, Yesod; Propositional Logic, Set Theory;
44;Dylan; Multimethods, Generics, Macros; Linear Programming, Network Flow; Dylan Memory Management; Stack, Register; HTTP, Websocket; XML, Binary; CouchDB, PosgreSQL; Game Theory, Combinatorics;
45;Erland/OTP; Actor Model, Pattern Matching, Higher-Order Functions; Primality Testing, Greatest Common Divisor; Erlang Memory Management; Stack, Heap; TCP, UDP; MessagePack, JSON; Mnesia, CouchDB; Propositional Logic, Predicate Logic;
46;Elixir; Protocols, Polymorphism, Concurrency; Convex Hull, job scheduling; Elixir Memory Management; Stack, Heap; HTTP, Websocket; XML, JSON; MongoDB, PostgreSQL; Probability, Statistics;
47;Scala; Case Classes, Traits, Higher-Order Functions; Longest Increasing Subsequence, Shortest Path; Scala Memory Management; Stack, Heap; TCP, UDP; Play Framework, Akka; Cassandra, MongoDB; Combinatorics, Graph Theory;
48;Julia; Multiple Dispatch, Types, Macros; Quicksort, Dynamic Programming; Julia Memory Management; Stack, Heap; HTTP, Websocket; JSON, XML; MongoDB, SQLite; Calculus, Linear Algebra;
49;Fortran; Modules, Derived Types, Intrinsic Procedures; Nonlinear Equations, Eigenvalue Problems; Fortran Memory Management; Stack, Queue; MPI, TCP; HDF5, NetCDF; Numerical Analysis, Fourier Analysis;</s>;
50; Go; Records, Pointers, Interfaces; Minimum Spanning Tree, Dijkstra's Algorithm; Go Memory Management; Garbage Collection, Slice; TCP, UDP; Filesystem, Tempfile; SQLite, PostgreSQL; Discrete Mathematics, Probability;
51;Python; Classes, Decorators, Generators; Bellman-Ford, Knapsack; Python Memory Management; Reference Counting, Garbage Collection; HTTP, Websocket; Pickle, JSON; MySQL, SQLite; Statistics, Cryptography;
52;Rust; Ownership, Lifetimes, Traits; Delaunay Triangulation, Convex Hull; Rust Memory Management; Stack, Heap; TCP, UDP; File Operations, Standard Streams; SQLite, PostgreSQL; Number Theory, Discrete Mathematics;
53;Clojure; Multimethods, Protocols, Records; Longest Common Substring, Euclidean Distance; Clojure Memory Management; Stack, Heap; HTTP, WebSockets; DataCinch, JSON; PostgreSQL, MongoDB; Combinatorics, Graph Theory;
54;Swift; Extensions, Optionals, Closures; Topological Sort, Linear Programming; Swift Memory Management; Stack, Heap; URLSession, Sockets; File Manager, Stream; SQLite, Realm; Linear Algebra, Calculus;
55;Erlang; Processes, Messages, Pattern Matching; Fleet Allocation, Vehicle Routing; Erlang Memory Management; Stack, Heap; TCP, UDP; Disk Driving, File I/O; Mnesia, MySQL; Combinatorial Optimization, Graph Algorithms;
56;Haskell; Typeclasses, Type Inference, Laziness; Integer Factorization, Curve Fitting; Haskell Memory Management; Stack, Heap; Network.TCP, Network.UDP; System.IO.File, System.IO.Streams; CSV, SQLite; Game Theory, Optimization;
57;Dart; Isolates, Futures, Streams; Minimum Cost Maximum Flow, Pagerank; Dart Memory Management; Garbage Collection, Stack; HTTP, WebSockets; File IO, Directories; MongoDB, SQLite; Probability, Information Theory;
58;Lua; Metatables, Coroutines, Garbage Collection; Trie, A\* Search; Lua Memory Management; Stack, Heap; LuaSocket, LuaSec; LuaFileSystem, LuaStream; SQLite, PostgreSQL; Numerical Methods, Differential Equations;
59;Kotlin; Data Classes, Extensions, Lambda Expressions; Fleury's Algorithm, Vertex Coloring; Kotlin Memory Management; Automatic Memory Management; Sockets, Server Sockets; Files, File Trees; MongoDB, SQL; Combinatorics, Graph Algorithms;</s>
60; Swift; Tuples, Closures; Kruskal's Algorithm, Dijkstra's Algorithm; Swift Memory Management; Automatic Reference Counting; URLSession, CURL; File Manager, Data Streams; SQLite, Realm; Linear Algebra, Calculus;
61;Ruby; Symbols, Modules; Depth-First Search, Breadth-First Search; Ruby Memory Management; Mark-and-Sweep Garbage Collection; Sockets, DNS; Net/HTTP, OpenURI; File Operations, Tempfile; MongoDB, Redis; Discrete Math, Number Theory 
62;Go; Structs, Interfaces; Bellman-Ford Algorithm, Floyd-Warshall Algorithm; Go Memory Management; Garbage Collection; Context, Packages; Net/HTTP, Dial; File I/O,bufio; BoltDB, LevelDB; Combinatorics, Graph Theory 
63;Erlang; Processes, Messages; Depth-First Search, Breadth-First Search; Erlang Memory Management; Garbage Collection; gen_tcp, gen_udp; Http, WebSocket; File Handling, Binaries; Mnesia, PostgreSQL; Topology, Probability 
64;Forth; Words, Data Structures; Huffman Coding, Trie; Forth Memory Management; Garbage Collection; TCP Sockets, UDP Sockets; HTTP, FTP; File Access, Filing; SQLite, Berkeley DB; Geometry, Trigonometry 
65;OCaml; Functions, Tuples; Depth-First Search, Breadth-First Search; OCaml Memory Management; Garbage Collection; Unix Socket, Network; SSL, SSH; In_channel, Out_channel; SQLite, PostgreSQL; Combinatorics, Logic 
66;Rust; Ownership, Lifetimes; Minimum Spanning Tree, Topological Sort; Rust Memory Management; Automatic Memory Management; TcpStream, UdpSocket; Hyper,Tokio; File, I/O; SQLite, Diesel; Abstract Algebra, Discrete Math 
67;D; Packages, Tuples; Longest Common Subsequence, Smith-Waterman; D Memory Management; Garbage Collection, Slab; cURL, Unix Sockets; HttpClient, Pop3Client; File, Standard File System; MongoDB, PostgreSQL; Linear Algebra, Differential Equations 
68;Scala; Case Classes, Traits; A\* Search, IDA\* Search; Scala Memory Management; Automatic Memory Management; Sockets, AsyncIO; Play, Spray; File Input/Output, Stream; Apache Cassandra, PostgreSQL; Probability, Statistics 
69;Perl; References, Hashes; Trie, Patricia Trie; Perl Memory Management; Reference Counting; LWP, Net::SSH2; HTTP::Request, CGI::Simple; File::Find, File::Copy; SQLite, DBI; Number Theory, Cryptography </s>
70; Rust; Structs, Enums; Rust Search Algorithms, Kruskal's Algorithm; Rust Memory Management; Ownership, Borrowing; mio, Tokio; Hyper, Reqwest; Directory, File; SQLite, Diesel; Combinatorics, Graph Theory 
71;Go; Structs, Interfaces; Go Sort Algorithms, Heap Sort; Go Memory Management; Garbage Collection, Slab; Net/Http, Gin; Os, File System; BoltDB, PostgreSQL; Graph Theory, Combinatorics;
72;Julia; Composite Types, Multiple Dispatch; Approximate Nearest Neighbors, Quadtree; Julia Memory Management; Automatic Memory Management; HTTP.jl, Requests; Sockets, TCP; Folder, File; MongoDB, DataFrames; Optimization, Differential Equations 
73;Haskell; Types, Classes; Haskell Search Algorithms, A\* Search; Haskell Memory Management; Garbage Collection, Haskell Heap; Network.HTTP, Warp; System.Posix.Files, Directory; Data.Conduit, FileManip; Yesod, Persistent; Probability, Category Theory 
74;Clojure; Records, Protocols; Clojure Search Algorithms, Trie; Clojure Memory Management; Garbage Collection, Clojure Stack; Aleph, HttpKit; clojure.java.io, clojure.string; File, EDN; Datomic, PostgreSQL; Graph Theory, Combinatorics 
75;Dart; Classes, Mixins; Dart Search Algorithms, Depth-Limited Search; Dart Memory Management; Garbage Collection, Automatic; Http, Shelf; File, Path; MongoDB, Firebase; Abstract Algebra, Number Theory;
76;Erlang; Tuples, Records; Erlang Search Algorithms, Linear Search; Erlang Memory Management; Garbage Collection, Immix; Cowboy, Mochiweb; File:IO, File; Mnesia, PostgreSQL; Graph Theory, Combinatorics;
77;Swift; Structs, Classes; Swift Search Algorithms, Trie; Swift Memory Management; Automatic Reference Counting, Cycle Collection; URLSession, Alamofire; FileManager, URL; Realm, PostgreSQL; Topology, Group Theory;
78;Kotlin; Classes, Objects; Kotlin Search Algorithms, Minimax; Kotlin Memory Management; Garbage Collection, Automatic; OkHttp, Ktor; File, Paths; MongoDB, Exposed; Category Theory, Type Theory;
79;Fortran; Derived Types, Modules; Fortran Search Algorithms, Binary Search; Fortran Memory Management; Allocate, Deallocate; Libcurl, HTTP; Unit, File; SQLite, ADO; Combinatorial Algorithms, Cryptography;
80;OCaml; Records, Variants; OCaml Search Algorithms, Dijkstra Algorithm; OCaml Memory Management; Garbage Collection, Compacting; Cohttp, Httpaf; File, Path; MongoDB, MariaDB; Group Theory, Ring Theory;</s>
81; Rust; Structs, Enums; Rust Algorithms, DFS; Rust Memory Management; Smart Pointers, Ownership; Reqwest, Hyper; File, Path; PostgreSQL, Diesel; Abstract Algebra, Graph Theory;
82;Go; Structs, Interfaces; Go Sort Algorithms, Merge Sort; Go Memory Management; Garbage Collection, Concurrent; Net/Http, Http2; File, Path; MySQL, SQLite; Probability, Statistics;
83;Python; Classes, Objects; Python Sort Algorithms, Quick Sort; Python Memory Management; Garbage Collection, Reference Counting; Requests, Urllib3; File, Path; SQLite, Django; Computational Geometry, Graph Algorithms;
84;Haskell; Types, Functions; Haskell Search Algorithms, A\* Search; Haskell Memory Management; Garbage Collection, Generational; Network.HTTP, Warp; File, Path; Linear Algebra, Number Theory;;
85;Erlang; Records, Processes; Erlang Sort Algorithms, Tim Sort; Erlang Memory Management; Garbage Collection, Selective; Inex, Cowboy; File, Path; Mnesia, LFeMPG; Combinatorics, Optimization;
86;Swift; Structs, Classes; Swift Sort Algorithms, Heap Sort; Swift Memory Management; Automatic Reference Counting, Manual; URLSession, Alamofire; File, Path; PostgreSQL, CoreData; Algebraic Structures, Topology;
87;Dart; Classes, Objects; Dart Sort Algorithms, Radix Sort; Dart Memory Management; Automatic, Manual; Http, Shelf; File, Path; MongoDB, Firebase; Propositional Logic, Modal Logic;
88;Clojure; Data Types, Functions; Clojure Search Algorithms, Best-First Search; Clojure Memory Management; Garbage Collection, Incremental; Ring, Compojure; File, Path; PostgreSQL, H2; Category Theory, Lambda Calculus;
89;Lua; Tables, Functions; Lua Sort Algorithms, Bogo Sort; Lua Memory Management; Garbage Collection, Precise; LuaSocket, Lua SEC; File, Path; SQLite, LuaSQL; Graph Theory, Set Theory;
90;Julia; Types, Functions; Julia Sort Algorithms, Intro Sort; Julia Memory Management; Garbage Collection, Hybrid; HTTP.jl, Requests; File, Path; MongoDB, SQLite; Computational Complexity, Computational Number Theory;</s>
91; Rust; Enums, Structs; Rust Sort Algorithms, Merge Sort; Rust Memory Management; Garbage Collection, None; Crossbeam, Rayon; File, Path; PostgreSQL, Diesel; Linear Algebra, Number Theory;
92;Go; Types, Functions; Go Sort Algorithms, Quick Sort; Go Memory Management; Garbage Collection, Mark and Sweep; Net/HTTP, Context; File, Path; Bolt, SQLite; Combinatorics, Graph Theory;
93;Crystal; Structs, Types; Crystal Sort Algorithms, Heap Sort; Crystal Memory Management; Garbage Collection, Incremental; Amagi, Hyper; File, Path; PostgreSQL, PGx; Abstract Algebra, Topology;
94;Dart; Classes, Functions; Dart Sort Algorithms, Radix Sort; Dart Memory Management; Garbage Collection, Generational; Shelf, ObjectDB; File, Path; SQLite, Sembast; Probability, Logic;
95;Nim; Types, Procedures; Nim Sort Algorithms, Tim Sort; Nim Memory Management; Garbage Collection, Compacting; Http, WebSockets; File, Path; Sqlite3, RocksDB; Combinatorics, Computational Geometry;
96;Eliom; Functors, Modules; Eliom Sort Algorithms, Introsort; Eliom Memory Management; Garbage Collection, Dynamic; Cohttp, Httpaf; File, Path; Sqlite3, Rollerderby; Group Theory, Set Theory;
97;PureScript; Types, Classes; PureScript Sort Algorithms, Insertion Sort; PureScript Memory Management; Garbage Collection, Generational; Spago, Purs; File, Path; Pg, Psql; Category Theory, Type Theory;
98;Forth; Words, Variables; Forth Sort Algorithms, Bubble Sort; Forth Memory Management; Garbage Collection, None; Fluid, Slash; File, Path; SQLite3, PSQLite; Graph Theory, Automata Theory;
99;D Programming Language; Classes, Functions; D Sort Algorithms, Shell Sort; D Memory Management; Garbage Collection, Conservative; Vibe.d, Tango; File, Path; Sqlite3, DBI-D; Computational Geometry, Number Theory;
100;Kotlin; Classes, Functions; Kotlin Sort Algorithms, Counting Sort; Kotlin Memory Management; Garbage Collection, Generational; Ktor, Exposed; File, Path; H2, HikariCP; Combinatorics, Probability;</s>
101; Common Lisp; Symbols, Packages; Common Lisp Sort Algorithms, Merge Sort; Common Lisp Memory Management; Garbage Collection, Incremental; Unix, Lisp Machine; Virtual Memory, Paging; TCP/IP, DNS; Lisp Files, Keyword Arguments; Mathematical Logic, Set Theory 
102;F Sharp; Types, Functions; F Sharp Sort Algorithms, Heapsort; F Sharp Memory Management; Garbage Collection, Bakery; .NET, Mono; File, Path; SQL Server, SQLite; Category Theory, Type Theory;
103;Erlang; Processes, Functions; Erlang Sort Algorithms, Quicksort; Erlang Memory Management; Garbage Collection, Stop-and-Copy; Operating System, Lightweight Processes; Virtual Machine, BEAM; Network Sockets, Higher-Level; Term Rewriting, Datalog;
104;Rust; Types, Functions; Rust Sort Algorithms, Insertion Sort; Rust Memory Management; Garbage Collection, None; Linux, Windows; Virtual Memory, Mmap; TCP/UDP, DNS; Rust Files, Cargo; Linear Algebra, Probabilistic Methods 
105;Go; Goroutines, Packages; Go Sort Algorithms, Timsort; Go Memory Management; Garbage Collection, Concurrent; Unix, Microsoft Windows; Virtual Memory, Mmap; HTTP/2, QUIC; Go Files, GO Modules; Abstract Algebra, Computational Number Theory 
106;Swift; Types, Functions; Swift Sort Algorithms, Introsort; Swift Memory Management; Garbage Collection, Automatic Reference Counting; macOS, iOS; Virtual Memory, Memory Mapped Files; URLSession, CFNetwork; Symbolic Computation, Cryptography;
107;Groovy; Classes, Closures; Groovy Sort Algorithms, Introsort; Groovy Memory Management; Garbage Collection, Generational; JVM, GraalVM; File, Path; SQL, Object-Relational Mapping; Domain-Specific Language, Metaprogramming;
108;OCaml; Tuples, Records; OCaml Sort Algorithms, Timsort; OCaml Memory Management; Garbage Collection, Incremental; Unix, Microsoft Windows; Virtual Memory, Paging; BSD Sockets, DNS; Caml Light, Coq; Combinatorial Algorithms, Graph Algorithms 
109;Haskell; Types, Functions; Haskell Sort Algorithms, Mergesort; Haskell Memory Management; Garbage Collection, Generational; GHC, Haskell Platform; File, Path; PostgreSQL, SQLite; Type Classes, Lazy Evaluation; Universal Algebra, Category Theory 
110;Crystal; Types, Functions; Crystal Sort Algorithms, Introsort; Crystal Memory Management; Garbage Collection, Reference Counting; Unix, Microsoft Windows; Virtual Memory, Mmap; HTTP, WebSocket; Crystal Files, Dependency Management; Formal Verification, Logic Programming </s>
